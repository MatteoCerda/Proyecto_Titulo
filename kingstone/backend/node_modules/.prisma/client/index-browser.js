
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  fullName: 'fullName',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tokenHash: 'tokenHash',
  expiresAt: 'expiresAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id_cliente: 'id_cliente',
  rut: 'rut',
  nombre_contacto: 'nombre_contacto',
  email: 'email',
  telefono: 'telefono',
  direccion: 'direccion',
  comuna: 'comuna',
  ciudad: 'ciudad',
  id_usuario: 'id_usuario',
  creado_en: 'creado_en'
};

exports.Prisma.InventoryItemScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  itemType: 'itemType',
  color: 'color',
  provider: 'provider',
  quantity: 'quantity',
  priceWeb: 'priceWeb',
  priceStore: 'priceStore',
  priceWsp: 'priceWsp',
  umbralBajoStock: 'umbralBajoStock',
  qrRaw: 'qrRaw',
  imageUrl: 'imageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  clienteEmail: 'clienteEmail',
  clienteNombre: 'clienteNombre',
  estado: 'estado',
  notificado: 'notificado',
  total: 'total',
  itemsCount: 'itemsCount',
  materialId: 'materialId',
  materialLabel: 'materialLabel',
  payload: 'payload',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PedidoAdjuntoScalarFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  filename: 'filename',
  mimeType: 'mimeType',
  sizeBytes: 'sizeBytes',
  widthCm: 'widthCm',
  heightCm: 'heightCm',
  areaCm2: 'areaCm2',
  lengthCm: 'lengthCm',
  data: 'data',
  createdAt: 'createdAt'
};

exports.Prisma.CotizacionScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  canal: 'canal',
  estado: 'estado',
  totalEstimado: 'totalEstimado',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.CotizacionItemScalarFieldEnum = {
  id: 'id',
  cotizacionId: 'cotizacionId',
  producto: 'producto',
  variantes: 'variantes',
  cantidad: 'cantidad',
  notas: 'notas',
  archivos: 'archivos',
  coberturaInk: 'coberturaInk',
  createdAt: 'createdAt'
};

exports.Prisma.AsignacionScalarFieldEnum = {
  id: 'id',
  cotizacionId: 'cotizacionId',
  operadorId: 'operadorId',
  estado: 'estado',
  slaMinutos: 'slaMinutos',
  vencimiento: 'vencimiento',
  createdAt: 'createdAt',
  aceptadoEn: 'aceptadoEn',
  resueltoEn: 'resueltoEn'
};

exports.Prisma.CotizacionNotificacionScalarFieldEnum = {
  id: 'id',
  cotizacionId: 'cotizacionId',
  canal: 'canal',
  destino: 'destino',
  payload: 'payload',
  enviadoEn: 'enviadoEn',
  estado: 'estado',
  createdAt: 'createdAt'
};

exports.Prisma.OfertaScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  imageUrl: 'imageUrl',
  link: 'link',
  activo: 'activo',
  prioridad: 'prioridad',
  itemId: 'itemId',
  startAt: 'startAt',
  endAt: 'endAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  passwordHash: 'passwordHash',
  fullName: 'fullName',
  role: 'role'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PasswordResetOrderByRelevanceFieldEnum = {
  tokenHash: 'tokenHash'
};

exports.Prisma.ClienteOrderByRelevanceFieldEnum = {
  rut: 'rut',
  nombre_contacto: 'nombre_contacto',
  email: 'email',
  telefono: 'telefono',
  direccion: 'direccion',
  comuna: 'comuna',
  ciudad: 'ciudad'
};

exports.Prisma.InventoryItemOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  itemType: 'itemType',
  color: 'color',
  provider: 'provider',
  qrRaw: 'qrRaw',
  imageUrl: 'imageUrl'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.PedidoOrderByRelevanceFieldEnum = {
  clienteEmail: 'clienteEmail',
  clienteNombre: 'clienteNombre',
  estado: 'estado',
  materialId: 'materialId',
  materialLabel: 'materialLabel'
};

exports.Prisma.PedidoAdjuntoOrderByRelevanceFieldEnum = {
  filename: 'filename',
  mimeType: 'mimeType'
};

exports.Prisma.CotizacionOrderByRelevanceFieldEnum = {
  canal: 'canal',
  estado: 'estado'
};

exports.Prisma.CotizacionItemOrderByRelevanceFieldEnum = {
  producto: 'producto',
  notas: 'notas'
};

exports.Prisma.AsignacionOrderByRelevanceFieldEnum = {
  estado: 'estado'
};

exports.Prisma.CotizacionNotificacionOrderByRelevanceFieldEnum = {
  canal: 'canal',
  destino: 'destino',
  estado: 'estado'
};

exports.Prisma.OfertaOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  descripcion: 'descripcion',
  imageUrl: 'imageUrl',
  link: 'link'
};


exports.Prisma.ModelName = {
  User: 'User',
  PasswordReset: 'PasswordReset',
  Cliente: 'Cliente',
  InventoryItem: 'InventoryItem',
  Pedido: 'Pedido',
  PedidoAdjunto: 'PedidoAdjunto',
  Cotizacion: 'Cotizacion',
  CotizacionItem: 'CotizacionItem',
  Asignacion: 'Asignacion',
  CotizacionNotificacion: 'CotizacionNotificacion',
  Oferta: 'Oferta'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
