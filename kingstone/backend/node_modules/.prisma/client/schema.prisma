generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int             @id @default(autoincrement())
  email        String          @unique
  passwordHash String
  fullName     String
  role         String          @default("user")
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  resets       PasswordReset[]
  // Relaci√≥n 1:1 con perfil de cliente
  cliente      Cliente?
}

model PasswordReset {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  tokenHash String
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime  @default(now())

  @@index([userId])
}

// Perfil de cliente (opcional) vinculado a User
model Cliente {
  id_cliente      Int      @id @default(autoincrement())
  rut             String?  @db.VarChar(15)
  nombre_contacto String?  @db.VarChar(150)
  email           String?  @db.VarChar(120)
  telefono        String?  @db.VarChar(30)
  direccion       String?  @db.VarChar(200)
  comuna          String?  @db.VarChar(80)
  ciudad          String?  @db.VarChar(80)
  id_usuario      Int      @unique
  user            User     @relation(fields: [id_usuario], references: [id])
  creado_en       DateTime @default(now())

  @@index([id_usuario])
  @@map("cliente")
}

model InventoryItem {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  name      String
  itemType  String
  color     String
  provider  String
  quantity  Int      @default(0)
  qrRaw     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("inventory_item")
}
